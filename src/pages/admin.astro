---
// Admin Dashboard Page
import Header from "../components/Header.astro";
import "../styles/main.css";
import "../styles/tailwind.css";
import "../styles/admin/admin-styles.css";
import "../styles/admin/responsive-optimization.css";
import Layout from '../layouts/Layout.astro';
---
<Layout title="Bảng điều khiển Admin - Baden App">
    <Header currentPage="admin" pageTitle="Bảng điều khiển Admin" />
    <script>
      // Route guard: only admin can access
      document.addEventListener('DOMContentLoaded', async () => {
        const token = localStorage.getItem('authToken');
        if (!token) { window.location.href = '/login'; return; }
        try{
          const res = await fetch('/.netlify/functions/auth', {
            method:'POST',
            headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json' },
            body: JSON.stringify({ action:'verify' })
          });
          const json = await res.json();
          if (!res.ok || !json.success || json.role !== 'admin') {
            window.location.href = '/account';
          }
        }catch{ window.location.href = '/account'; }
      });
    </script>

    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f1f5f9;
        }
        
        .card-hover {
            transition: all 0.3s ease;
        }
        
        .card-hover:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        
        .gradient-bg-secondary {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }
        
        .gradient-bg-success {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }
        
        .gradient-bg-warning {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }
        
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>

    

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-3 sm:px-4 lg:px-8 py-4 sm:py-8">
    <div class="min-h-screen py-8">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <!-- Header Section -->
            <div class="mb-8">
                <div class="flex items-center justify-between flex-col sm:flex-row gap-4 mobile-stack">
                    <div class="flex items-center gap-4 mobile-text-center">
                        <div class="p-3 bg-white rounded-xl shadow-sm">
                            <i class="fas fa-cog text-2xl text-slate-600"></i>
                        </div>
                        <div>
                            <h1 class="text-3xl font-bold text-slate-800">Bảng điều khiển Admin</h1>
                            <p class="text-slate-600 mt-1">Quản lý toàn bộ hệ thống Baden App</p>
                        </div>
                    </div>
                    <button id="logoutBtn" class="flex items-center gap-2 px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition-colors duration-200 mobile-full-width sm:w-auto">
                        <i class="fas fa-sign-out-alt"></i>
                        <span class="hidden sm:inline">Đăng xuất</span>
                        <span class="sm:hidden">Đăng xuất</span>
                    </button>
                </div>
            </div>

            <!-- Error Message -->
            <div id="errorMessage" class="hidden mb-6 p-4 bg-red-50 border border-red-200 rounded-xl">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-circle text-red-400"></i>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700" id="errorText"></p>
                    </div>
                </div>
            </div>

            <!-- Stats Overview -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8 mobile-stack">
                <div class="bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                    <div class="flex items-center justify-between mobile-stack">
                        <div class="mobile-text-center">
                            <p class="text-sm font-medium text-slate-600">Tổng đăng ký</p>
                            <div id="totalRegistrations" class="mt-2">
                                <p class="text-2xl font-bold text-slate-800">--</p>
                                <div class="flex items-center mt-1 justify-center sm:justify-start">
                                    <i class="fas fa-spinner fa-spin text-blue-600 mr-2 text-sm"></i>
                                    <span class="text-xs text-slate-400">Đang cập nhật...</span>
                                </div>
                            </div>
                        </div>
                        <div class="p-3 bg-blue-50 rounded-xl mx-auto sm:mx-0">
                            <i class="fas fa-users text-xl text-blue-600"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                    <div class="flex items-center justify-between mobile-stack">
                        <div class="mobile-text-center">
                            <p class="text-sm font-medium text-slate-600">Điểm quan tâm</p>
                            <div id="totalPOIs" class="mt-2">
                                <p class="text-2xl font-bold text-slate-800">--</p>
                                <div class="flex items-center mt-1 justify-center sm:justify-start">
                                    <i class="fas fa-spinner fa-spin text-emerald-600 mr-2 text-sm"></i>
                                    <span class="text-xs text-slate-400">Đang cập nhật...</span>
                                </div>
                            </div>
                        </div>
                        <div class="p-3 bg-emerald-50 rounded-xl mx-auto sm:mx-0">
                            <i class="fas fa-map-marker-alt text-xl text-emerald-600"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                    <div class="flex items-center justify-between mobile-stack">
                        <div class="mobile-text-center">
                            <p class="text-sm font-medium text-slate-600">Tổng cẩm nang</p>
                            <div id="totalGuide" class="mt-2">
                                <p class="text-2xl font-bold text-slate-800">--</p>
                                <div class="flex items-center mt-1 justify-center sm:justify-start">
                                    <i class="fas fa-spinner fa-spin text-amber-600 mr-2 text-sm"></i>
                                    <span class="text-xs text-slate-400">Đang cập nhật...</span>
                                </div>
                            </div>
                        </div>
                        <div class="p-3 bg-amber-50 rounded-xl mx-auto sm:mx-0">
                            <i class="fas fa-chart-line text-xl text-amber-600"></i>
                        </div>
                    </div>
                </div>
            </div>

            
            
            <!-- Admin Modules -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mobile-stack" id="adminModules">
                <a href="/admin/climb" class="group block">
                    <div class="bg-blue-50 rounded-2xl p-6 shadow-sm border border-slate-100 transition-all duration-300 hover:shadow-lg hover:scale-105 hover:border-slate-200">
                        <div class="flex items-start justify-between mb-4 mobile-stack">
                            <div class="p-3 rounded-xl bg-white shadow-sm mx-auto sm:mx-0">
                                <i class="fas fa-mountain text-2xl text-blue-600"></i>
                            </div>
                            <div class="text-slate-400 group-hover:text-slate-600 transition-colors">
                                <i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                        
                        <h3 class="text-xl font-semibold text-slate-800 mb-2 group-hover:text-slate-900 transition-colors mobile-text-center">
                            Quản lý Leo núi
                        </h3>
                        
                        <p class="text-slate-600 text-sm leading-relaxed mb-3 mobile-text-center">
                            Quản lý đăng ký, chứng nhận và thống kê leo núi
                        </p>

                        <div class="flex items-center justify-between mobile-stack">
                            <div class="inline-flex items-center text-sm font-medium bg-gradient-to-r from-blue-500 to-blue-600 bg-clip-text text-transparent mx-auto sm:mx-0">
                                Truy cập ngay
                                <i class="fas fa-chevron-right ml-1 group-hover:translate-x-1 transition-transform"></i>
                            </div>
                            <div class="text-center sm:text-right">
                                <p class="text-xs text-slate-500">Tổng số</p>
                                <p class="text-lg font-bold text-slate-800">--</p>
                            </div>
                        </div>
                    </div>
                </a>
                
                <a href="/admin/guide" class="group block">
                    <div class="bg-emerald-50 rounded-2xl p-6 shadow-sm border border-slate-100 transition-all duration-300 hover:shadow-lg hover:scale-105 hover:border-slate-200">
                        <div class="flex items-start justify-between mb-4">
                            <div class="p-3 rounded-xl bg-white shadow-sm">
                                <i class="fas fa-book text-2xl text-emerald-600"></i>
                            </div>
                            <div class="text-slate-400 group-hover:text-slate-600 transition-colors">
                                <i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                        
                        <h3 class="text-xl font-semibold text-slate-800 mb-2 group-hover:text-slate-900 transition-colors">
                            Quản lý Cẩm nang
                        </h3>
                        
                        <p class="text-slate-600 text-sm leading-relaxed mb-3">
                            Quản lý tours, nhà hàng, khách sạn và đặc sản
                        </p>

                        <div class="flex items-center justify-between">
                            <div class="inline-flex items-center text-sm font-medium bg-gradient-to-r from-emerald-500 to-emerald-600 bg-clip-text text-transparent">
                                Truy cập ngay
                                <i class="fas fa-chevron-right ml-1 group-hover:translate-x-1 transition-transform"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-xs text-slate-500">Tổng số</p>
                                <p class="text-lg font-bold text-slate-800">--</p>
                            </div>
                        </div>
                    </div>
                </a>
                
                <a href="/admin/poi" class="group block">
                    <div class="bg-amber-50 rounded-2xl p-6 shadow-sm border border-slate-100 transition-all duration-300 hover:shadow-lg hover:scale-105 hover:border-slate-200">
                        <div class="flex items-start justify-between mb-4">
                            <div class="p-3 rounded-xl bg-white shadow-sm">
                                <i class="fas fa-map-marker-alt text-2xl text-amber-600"></i>
                            </div>
                            <div class="text-slate-400 group-hover:text-slate-600 transition-colors">
                                <i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                        
                        <h3 class="text-xl font-semibold text-slate-800 mb-2 group-hover:text-slate-900 transition-colors">
                            Quản lý POI
                        </h3>
                        
                        <p class="text-slate-600 text-sm leading-relaxed mb-3">
                            Quản lý điểm quan tâm và giờ hoạt động
                        </p>

                        <div class="flex items-center justify-between">
                            <div class="inline-flex items-center text-sm font-medium bg-gradient-to-r from-amber-500 to-amber-600 bg-clip-text text-transparent">
                                Truy cập ngay
                                <i class="fas fa-chevron-right ml-1 group-hover:translate-x-1 transition-transform"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-xs text-slate-500">Tổng số</p>
                                <p class="text-lg font-bold text-slate-800">--</p>
                            </div>
                        </div>
                    </div>
                </a>
                
                <a href="/admin/users" class="group block">
                    <div class="bg-purple-50 rounded-2xl p-6 shadow-sm border border-slate-100 transition-all duration-300 hover:shadow-lg hover:scale-105 hover:border-slate-200">
                        <div class="flex items-start justify-between mb-4">
                            <div class="p-3 rounded-xl bg-white shadow-sm">
                                <i class="fas fa-users text-2xl text-purple-600"></i>
                            </div>
                            <div class="text-slate-400 group-hover:text-slate-600 transition-colors">
                                <i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                        
                        <h3 class="text-xl font-semibold text-slate-800 mb-2 group-hover:text-slate-900 transition-colors">
                            Quản lý Người dùng
                        </h3>
                        
                        <p class="text-slate-600 text-sm leading-relaxed mb-3">
                            Quản lý tài khoản, thông tin và quyền truy cập
                        </p>

                        <div class="flex items-center justify-between">
                            <div class="inline-flex items-center text-sm font-medium bg-gradient-to-r from-purple-500 to-purple-600 bg-clip-text text-transparent">
                                Truy cập ngay
                                <i class="fas fa-chevron-right ml-1 group-hover:translate-x-1 transition-transform"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-xs text-slate-500">Tổng số</p>
                                <p class="text-lg font-bold text-slate-800">--</p>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            <!-- Quick Actions -->
            <div class="mt-8 bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                <div class="flex items-center justify-between mb-4 mobile-stack">
                    <h3 class="text-lg font-semibold text-slate-800">Thao tác nhanh</h3>
                    <button id="refreshBtn" class="flex items-center gap-2 px-3 py-1 text-sm bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors mobile-full-width">
                        <i class="fas fa-sync-alt"></i>
                        <span class="hidden sm:inline">Làm mới dữ liệu</span>
                        <span class="sm:hidden">Làm mới</span>
                    </button>
                </div>
                <div class="flex flex-wrap gap-3 mobile-stack">
                    <a href="/admin/climb" class="inline-flex items-center gap-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg text-sm font-medium hover:bg-blue-200 transition-colors">
                        <i class="fas fa-mountain"></i>
                        <span>Quản lý Leo núi</span>
                    </a>
                    <a href="/admin/guide" class="inline-flex items-center gap-2 px-4 py-2 bg-emerald-100 text-emerald-700 rounded-lg text-sm font-medium hover:bg-emerald-200 transition-colors">
                        <i class="fas fa-book"></i>
                        <span>Quản lý Cẩm nang</span>
                    </a>
                    <a href="/admin/poi" class="inline-flex items-center gap-2 px-4 py-2 bg-amber-100 text-amber-700 rounded-lg text-sm font-medium hover:bg-amber-200 transition-colors">
                        <i class="fas fa-map-marker-alt"></i>
                        <span>Quản lý POI</span>
                    </a>
                    <a href="/admin/users" class="inline-flex items-center gap-2 px-4 py-2 bg-purple-100 text-purple-700 rounded-lg text-sm font-medium hover:bg-purple-200 transition-colors">
                        <i class="fas fa-users"></i>
                        <span>Quản lý Người dùng</span>
                    </a>
                    <div id="activeNotifications" class="px-4 py-2 bg-slate-100 text-slate-700 rounded-lg text-sm font-medium">
                        <span>Thông báo đang hoạt động: </span>
                        <span class="font-bold">--</span>
                        <div class="flex items-center mt-1">
                            <i class="fas fa-spinner fa-spin text-slate-500 mr-1 text-xs"></i>
                            <span class="text-xs text-slate-400">Đang cập nhật...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script is:inline>
        const CONFIG = {
            GOOGLE_SCRIPT_URL: 'https://script.google.com/macros/s/AKfycbyWYJtTjYvSFT--TPpV6bk4-o6jKtqXBhe5di-h6ozC2sKscM_i8_PCJxzPpL_bEDNT/exec',
            COMBINED_API_URL: '/.netlify/functions/combined-data',
            POI_API_URL: '/.netlify/functions/data-blobs?file=POI.json',
            TOURS_API_URL: '/.netlify/functions/data-blobs?file=Tours.json',
            ACCOMMODATIONS_API_URL: '/.netlify/functions/data-blobs?file=Accommodations.json',
            RESTAURANTS_API_URL: '/.netlify/functions/data-blobs?file=Restaurants.json',
            SPECIALTIES_API_URL: '/.netlify/functions/data-blobs?file=Specialties.json'
        };

        // Local 60s cache for combined-data to avoid frequent refetch on admin home
        const CD_CACHE_KEY = 'combinedDataCacheAdmin';
        const CD_TTL_MS = 60000; // 60s
        async function fetchCombinedWithLocalCache() {
            try {
                const cached = localStorage.getItem(CD_CACHE_KEY);
                if (cached) {
                    const obj = JSON.parse(cached);
                    if (obj && typeof obj.timestamp === 'number' && (Date.now() - obj.timestamp) < CD_TTL_MS) {
                        return obj.data;
                    }
                }
            } catch (e) {}
            const res = await fetch(CONFIG.COMBINED_API_URL, { cache: 'default' });
            const data = res.ok ? await res.json() : { notifications: { data: [] }, gpsSettings: { data: {} } };
            try { localStorage.setItem(CD_CACHE_KEY, JSON.stringify({ timestamp: Date.now(), data })); } catch (e) {}
            return data;
        }

        let stats = {
            totalRegistrations: 0,
            totalPOIs: 0,
            totalTours: 0,
            totalAccommodations: 0,
            totalRestaurants: 0,
            totalSpecialties: 0,
            activeNotifications: 0
        };

        const adminModules = [
            {
                title: 'Quản lý Leo núi',
                description: 'Quản lý đăng ký, chứng nhận và thống kê leo núi',
                icon: 'fas fa-mountain',
                color: 'from-blue-500 to-blue-600',
                bgColor: 'bg-blue-50',
                iconColor: 'text-blue-600',
                link: '/admin/climb',
                countKey: 'totalRegistrations'
            },
            {
                title: 'Quản lý Cẩm nang',
                description: 'Quản lý tours, nhà hàng, khách sạn và đặc sản',
                icon: 'fas fa-book',
                color: 'from-emerald-500 to-emerald-600',
                bgColor: 'bg-emerald-50',
                iconColor: 'text-emerald-600',
                link: '/admin/guide',
                countKey: 'totalGuide'
            },
            {
                title: 'Quản lý POI',
                description: 'Quản lý điểm quan tâm và giờ hoạt động',
                icon: 'fas fa-map-marker-alt',
                color: 'from-amber-500 to-amber-600',
                bgColor: 'bg-amber-50',
                iconColor: 'text-amber-600',
                link: '/admin/poi',
                countKey: 'totalPOIs'
            },
            {
                title: 'Quản lý Người dùng',
                description: 'Quản lý tài khoản, thông tin và quyền truy cập',
                icon: 'fas fa-users',
                color: 'from-purple-500 to-purple-600',
                bgColor: 'bg-purple-50',
                iconColor: 'text-purple-600',
                link: '/admin/users',
                countKey: 'totalUsers'
            }
        ];

        function formatNumber(num) {
            return new Intl.NumberFormat('vi-VN').format(num);
        }

        function showError(message) {
            const errorDiv = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            errorText.textContent = message;
            errorDiv.classList.remove('hidden');
        }

        function hideError() {
            document.getElementById('errorMessage').classList.add('hidden');
        }

        async function loadDashboardData() {
            hideError();
            
            try {
                // Load climb registration stats
                const climbStatsResponse = await fetch(`${CONFIG.GOOGLE_SCRIPT_URL}?action=getInitialStats`);
                const climbStats = climbStatsResponse.ok ? await climbStatsResponse.json() : { success: false };
                
                // Load POI data
                const poiResponse = await fetch(CONFIG.POI_API_URL);
                const poiData = poiResponse.ok ? await poiResponse.json() : [];
                
                // Load guide data
                const [toursResponse, accommodationsResponse, restaurantsResponse, specialtiesResponse] = await Promise.all([
                    fetch(CONFIG.TOURS_API_URL),
                    fetch(CONFIG.ACCOMMODATIONS_API_URL),
                    fetch(CONFIG.RESTAURANTS_API_URL),
                    fetch(CONFIG.SPECIALTIES_API_URL)
                ]);
                
                const toursData = toursResponse.ok ? await toursResponse.json() : [];
                const accommodationsData = accommodationsResponse.ok ? await accommodationsResponse.json() : [];
                const restaurantsData = restaurantsResponse.ok ? await restaurantsResponse.json() : [];
                const specialtiesData = specialtiesResponse.ok ? await specialtiesResponse.json() : [];
                
                // Load users count
                let usersCount = 0;
                try {
                    const token = localStorage.getItem('authToken') || '';
                    const usersRes = await fetch('/.netlify/functions/auth', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token },
                        body: JSON.stringify({ action: 'list' })
                    });
                    const usersJson = await usersRes.json().catch(() => ({ success:false, users:[] }));
                    if (usersRes.ok && usersJson.success && Array.isArray(usersJson.users)) {
                        usersCount = usersJson.users.length;
                    }
                } catch (_) { usersCount = 0; }

                // Load notifications (use local cache 60s)
                const notificationsData = await fetchCombinedWithLocalCache();
                
                stats = {
                    totalRegistrations: climbStats.success ? (climbStats.data?.yearlyCount || 0) : 0,
                    totalPOIs: Array.isArray(poiData) ? poiData.length : 0,
                    totalTours: Array.isArray(toursData) ? toursData.length : 0,
                    totalAccommodations: Array.isArray(accommodationsData) ? accommodationsData.length : 0,
                    totalRestaurants: Array.isArray(restaurantsData) ? restaurantsData.length : 0,
                    totalSpecialties: Array.isArray(specialtiesData) ? specialtiesData.length : 0,
                    activeNotifications: Array.isArray(notificationsData.notifications?.data) ? 
                        notificationsData.notifications.data.filter(n => n.active).length : 0
                };

                stats.totalGuide = stats.totalTours + stats.totalAccommodations + stats.totalRestaurants + stats.totalSpecialties;
                stats.totalUsers = usersCount;

                updateUI();
                
            } catch (err) {
                console.error('Error loading dashboard data:', err);
                showError('Không thể tải dữ liệu thống kê. Vui lòng thử lại sau.');
            }
        }

        function updateUI() {
            // Update stats with smooth transition
            updateStatCard('totalRegistrations', stats.totalRegistrations);
            updateStatCard('totalPOIs', stats.totalPOIs);
            updateStatCard('totalGuide', stats.totalGuide);
            
            // Update active notifications
            const notificationEl = document.getElementById('activeNotifications');
            notificationEl.innerHTML = `
                <span>Thông báo đang hoạt động: </span>
                <span class="font-bold">${stats.activeNotifications}</span>
                <div class="flex items-center mt-1">
                    <i class="fas fa-check-circle text-green-500 mr-1 text-xs"></i>
                    <span class="text-xs text-green-600">Đã cập nhật</span>
                </div>
            `;
            
            // Update admin modules count
            updateModuleCount('adminModules', stats);
        }

        function updateStatCard(elementId, value) {
            const element = document.getElementById(elementId);
            if (!element) return;
            
            const numberEl = element.querySelector('p.text-2xl');
            if (numberEl) {
                numberEl.textContent = formatNumber(value);
                numberEl.style.transform = 'scale(1.05)';
                setTimeout(() => { numberEl.style.transform = 'scale(1)'; }, 200);
            }

            const statusRow = element.closest('.bg-white.rounded-2xl.p-6')?.querySelector('.flex.items-center.mt-1');
            if (statusRow) {
                statusRow.innerHTML = '<i class="fas fa-check-circle text-green-500 mr-2 text-sm"></i><span class="text-xs text-green-600">Đã cập nhật</span>';
            }
        }

        function updateModuleCount(containerId, stats) {
            const container = document.getElementById(containerId);
            if (!container) return;
            
            // Update each module's count
            const modules = [
                { selector: 'a[href="/admin/climb"]', count: stats.totalRegistrations },
                { selector: 'a[href="/admin/guide"]', count: stats.totalGuide },
                { selector: 'a[href="/admin/poi"]', count: stats.totalPOIs },
                { selector: 'a[href="/admin/users"]', count: stats.totalUsers || 0 }
            ];
            
            modules.forEach(module => {
                const moduleEl = container.querySelector(module.selector);
                if (moduleEl) {
                    const countEl = moduleEl.querySelector('.text-lg.font-bold');
                    if (countEl) {
                        countEl.textContent = formatNumber(module.count);
                        countEl.style.transform = 'scale(1.05)';
                        setTimeout(() => {
                            countEl.style.transform = 'scale(1)';
                        }, 200);
                    }
                }
            });
        }

        // Event listeners
        document.getElementById('refreshBtn').addEventListener('click', loadDashboardData);
        document.getElementById('logoutBtn').addEventListener('click', () => {
            if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
                // Clear auth and redirect
                localStorage.removeItem('authToken');
                window.location.href = '/login';
            }
        });

        // Real-time updates system
        function setupRealTimeUpdates() {
            // Listen for localStorage changes (real-time updates from other admin pages)
            window.addEventListener('storage', (e) => {
                if (e.key === 'adminDataUpdate') {
                    const updateData = JSON.parse(e.newValue || '{}');
                    handleRealTimeUpdate(updateData);
                }
            });
            
            // Also listen for custom events (same tab updates)
            window.addEventListener('adminDataUpdate', (e) => {
                handleRealTimeUpdate(e.detail);
            });
            
            // Periodic refresh every 30 seconds for fallback
            setInterval(() => {
                loadDashboardData();
            }, 30000);
        }

        function handleRealTimeUpdate(updateData) {
            if (updateData.type === 'stats') {
                // Update stats immediately
                stats = { ...stats, ...updateData.data };
                updateUI();
                showRealTimeNotification('Dữ liệu đã được cập nhật');
            } else if (updateData.type === 'notifications') {
                // Update notifications count
                stats.activeNotifications = updateData.data.activeCount || 0;
                updateUI();
                showRealTimeNotification('Thông báo đã được cập nhật');
            }
        }

        function showRealTimeNotification(message) {
            // Create a subtle notification
            const notification = document.createElement('div');
            notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transition-all duration-300';
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="fas fa-sync-alt mr-2"></i>
                    <span>${message}</span>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            // Animate in
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
                notification.style.opacity = '1';
            }, 100);
            
            // Remove after 3 seconds
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                notification.style.opacity = '0';
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                }, 300);
            }, 3000);
        }

        // Broadcast updates to other tabs
        function broadcastUpdate(type, data) {
            const updateData = { type, data, timestamp: Date.now() };
            
            // localStorage event (for other tabs)
            try {
                localStorage.setItem('adminDataUpdate', JSON.stringify(updateData));
            } catch (e) {
                console.warn('Could not broadcast update:', e);
            }
            
            // Custom event (for same tab)
            window.dispatchEvent(new CustomEvent('adminDataUpdate', { detail: updateData }));
        }

        // Load data on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadDashboardData();
            setupRealTimeUpdates();
        });
    </script>
</Layout>