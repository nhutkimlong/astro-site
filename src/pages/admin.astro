---
// Admin Dashboard Page
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/main.css";
import "../styles/tailwind.css";
import "../styles/admin/admin-styles.css";
import Layout from '../layouts/Layout.astro';
---
<Layout title="Bảng điều khiển Admin - Baden App">
    <script>
      // Route guard: only admin can access
      document.addEventListener('DOMContentLoaded', async () => {
        const token = localStorage.getItem('authToken');
        if (!token) { window.location.href = '/login'; return; }
        try{
          const res = await fetch('/.netlify/functions/auth', {
            method:'POST',
            headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json' },
            body: JSON.stringify({ action:'verify' })
          });
          const json = await res.json();
          if (!res.ok || !json.success || json.role !== 'admin') {
            window.location.href = '/account';
          }
        }catch{ window.location.href = '/account'; }
      });
    </script>
</head>
<body class="bg-gradient-to-br from-slate-50 to-blue-50">
    <Header currentPage="admin" />
    <div class="min-h-screen py-8">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <!-- Header Section -->
            <div class="mb-8">
                <div class="flex items-center justify-between">
                    <div class="flex items-center gap-4">
                        <div class="p-3 bg-white rounded-xl shadow-sm">
                            <i class="fas fa-cog text-2xl text-slate-600"></i>
                        </div>
                        <div>
                            <h1 class="text-3xl font-bold text-slate-800">Bảng điều khiển Admin</h1>
                            <p class="text-slate-600 mt-1">Quản lý toàn bộ hệ thống Baden App</p>
                        </div>
                    </div>
                    <button id="logoutBtn" class="flex items-center gap-2 px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition-colors duration-200">
                        <i class="fas fa-sign-out-alt"></i>
                        Đăng xuất
                    </button>
                </div>
            </div>

            <!-- Error Message -->
            <div id="errorMessage" class="hidden mb-6 p-4 bg-red-50 border border-red-200 rounded-xl">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-circle text-red-400"></i>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700" id="errorText"></p>
                    </div>
                </div>
            </div>

            <!-- Stats Overview -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div class="bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-slate-600">Tổng đăng ký</p>
                            <div id="totalRegistrations" class="flex items-center mt-2">
                                <i class="fas fa-spinner fa-spin text-blue-600 mr-2"></i>
                                <span class="text-slate-400">Đang tải...</span>
                            </div>
                        </div>
                        <div class="p-3 bg-blue-50 rounded-xl">
                            <i class="fas fa-users text-xl text-blue-600"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-slate-600">Điểm quan tâm</p>
                            <div id="totalPOIs" class="flex items-center mt-2">
                                <i class="fas fa-spinner fa-spin text-emerald-600 mr-2"></i>
                                <span class="text-slate-400">Đang tải...</span>
                            </div>
                        </div>
                        <div class="p-3 bg-emerald-50 rounded-xl">
                            <i class="fas fa-map-marker-alt text-xl text-emerald-600"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-slate-600">Tổng cẩm nang</p>
                            <div id="totalGuide" class="flex items-center mt-2">
                                <i class="fas fa-spinner fa-spin text-amber-600 mr-2"></i>
                                <span class="text-slate-400">Đang tải...</span>
                            </div>
                        </div>
                        <div class="p-3 bg-amber-50 rounded-xl">
                            <i class="fas fa-chart-line text-xl text-amber-600"></i>
                        </div>
                    </div>
                </div>
            </div>

            
            
            <!-- Admin Modules -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="adminModules">
                <!-- Modules will be populated by JavaScript -->
            </div>

            <!-- Quick Actions -->
            <div class="mt-8 bg-white rounded-2xl p-6 shadow-sm border border-slate-100">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-semibold text-slate-800">Thao tác nhanh</h3>
                    <button id="refreshBtn" class="flex items-center gap-2 px-3 py-1 text-sm bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors">
                        <i class="fas fa-sync-alt"></i>
                        Làm mới dữ liệu
                    </button>
                </div>
                <div class="flex flex-wrap gap-3">
                    <a href="/admin/climb" class="px-4 py-2 bg-blue-100 text-blue-700 rounded-lg text-sm font-medium hover:bg-blue-200 transition-colors">
                        Xem đăng ký leo núi
                    </a>
                    <a href="/admin/poi" class="px-4 py-2 bg-amber-100 text-amber-700 rounded-lg text-sm font-medium hover:bg-amber-200 transition-colors">
                        Quản lý POI
                    </a>
                    <a href="/admin/guide" class="px-4 py-2 bg-emerald-100 text-emerald-700 rounded-lg text-sm font-medium hover:bg-emerald-200 transition-colors">
                        Quản lý cẩm nang
                    </a>
                    <div id="activeNotifications" class="px-4 py-2 bg-slate-100 text-slate-700 rounded-lg text-sm font-medium">
                        Thông báo đang hoạt động: ...
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script is:inline>
        const CONFIG = {
            GOOGLE_SCRIPT_URL: 'https://script.google.com/macros/s/AKfycbyWYJtTjYvSFT--TPpV6bk4-o6jKtqXBhe5di-h6ozC2sKscM_i8_PCJxzPpL_bEDNT/exec',
            COMBINED_API_URL: '/.netlify/functions/combined-data',
            POI_API_URL: '/.netlify/functions/data-blobs?file=POI.json',
            TOURS_API_URL: '/.netlify/functions/data-blobs?file=Tours.json',
            ACCOMMODATIONS_API_URL: '/.netlify/functions/data-blobs?file=Accommodations.json',
            RESTAURANTS_API_URL: '/.netlify/functions/data-blobs?file=Restaurants.json',
            SPECIALTIES_API_URL: '/.netlify/functions/data-blobs?file=Specialties.json'
        };

        // Local 60s cache for combined-data to avoid frequent refetch on admin home
        const CD_CACHE_KEY = 'combinedDataCacheAdmin';
        const CD_TTL_MS = 60000; // 60s
        async function fetchCombinedWithLocalCache() {
            try {
                const cached = localStorage.getItem(CD_CACHE_KEY);
                if (cached) {
                    const obj = JSON.parse(cached);
                    if (obj && typeof obj.timestamp === 'number' && (Date.now() - obj.timestamp) < CD_TTL_MS) {
                        return obj.data;
                    }
                }
            } catch (e) {}
            const res = await fetch(CONFIG.COMBINED_API_URL, { cache: 'default' });
            const data = res.ok ? await res.json() : { notifications: { data: [] }, gpsSettings: { data: {} } };
            try { localStorage.setItem(CD_CACHE_KEY, JSON.stringify({ timestamp: Date.now(), data })); } catch (e) {}
            return data;
        }

        let stats = {
            totalRegistrations: 0,
            totalPOIs: 0,
            totalTours: 0,
            totalAccommodations: 0,
            totalRestaurants: 0,
            totalSpecialties: 0,
            activeNotifications: 0
        };

        const adminModules = [
            {
                title: 'Quản lý Leo núi',
                description: 'Quản lý đăng ký, chứng nhận và thống kê leo núi',
                icon: 'fas fa-mountain',
                color: 'from-blue-500 to-blue-600',
                bgColor: 'bg-blue-50',
                iconColor: 'text-blue-600',
                link: '/admin/climb',
                countKey: 'totalRegistrations'
            },
            {
                title: 'Quản lý Cẩm nang',
                description: 'Quản lý tours, nhà hàng, khách sạn và đặc sản',
                icon: 'fas fa-book',
                color: 'from-emerald-500 to-emerald-600',
                bgColor: 'bg-emerald-50',
                iconColor: 'text-emerald-600',
                link: '/admin/guide',
                countKey: 'totalGuide'
            },
            {
                title: 'Quản lý POI',
                description: 'Quản lý điểm quan tâm và giờ hoạt động',
                icon: 'fas fa-map-marker-alt',
                color: 'from-amber-500 to-amber-600',
                bgColor: 'bg-amber-50',
                iconColor: 'text-amber-600',
                link: '/admin/poi',
                countKey: 'totalPOIs'
            },
            {
                title: 'Quản lý Người dùng',
                description: 'Quản lý tài khoản, thông tin và quyền truy cập',
                icon: 'fas fa-users',
                color: 'from-purple-500 to-purple-600',
                bgColor: 'bg-purple-50',
                iconColor: 'text-purple-600',
                link: '/admin/users',
                countKey: 'totalUsers'
            }
        ];

        function formatNumber(num) {
            return new Intl.NumberFormat('vi-VN').format(num);
        }

        function showError(message) {
            const errorDiv = document.getElementById('errorMessage');
            const errorText = document.getElementById('errorText');
            errorText.textContent = message;
            errorDiv.classList.remove('hidden');
        }

        function hideError() {
            document.getElementById('errorMessage').classList.add('hidden');
        }

        async function loadDashboardData() {
            hideError();
            
            try {
                // Load climb registration stats
                const climbStatsResponse = await fetch(`${CONFIG.GOOGLE_SCRIPT_URL}?action=getInitialStats`);
                const climbStats = climbStatsResponse.ok ? await climbStatsResponse.json() : { success: false };
                
                // Load POI data
                const poiResponse = await fetch(CONFIG.POI_API_URL);
                const poiData = poiResponse.ok ? await poiResponse.json() : [];
                
                // Load guide data
                const [toursResponse, accommodationsResponse, restaurantsResponse, specialtiesResponse] = await Promise.all([
                    fetch(CONFIG.TOURS_API_URL),
                    fetch(CONFIG.ACCOMMODATIONS_API_URL),
                    fetch(CONFIG.RESTAURANTS_API_URL),
                    fetch(CONFIG.SPECIALTIES_API_URL)
                ]);
                
                const toursData = toursResponse.ok ? await toursResponse.json() : [];
                const accommodationsData = accommodationsResponse.ok ? await accommodationsResponse.json() : [];
                const restaurantsData = restaurantsResponse.ok ? await restaurantsResponse.json() : [];
                const specialtiesData = specialtiesResponse.ok ? await specialtiesResponse.json() : [];
                
                // Load notifications (use local cache 60s)
                const notificationsData = await fetchCombinedWithLocalCache();
                
                stats = {
                    totalRegistrations: climbStats.success ? (climbStats.data?.yearlyCount || 0) : 0,
                    totalPOIs: Array.isArray(poiData) ? poiData.length : 0,
                    totalTours: Array.isArray(toursData) ? toursData.length : 0,
                    totalAccommodations: Array.isArray(accommodationsData) ? accommodationsData.length : 0,
                    totalRestaurants: Array.isArray(restaurantsData) ? restaurantsData.length : 0,
                    totalSpecialties: Array.isArray(specialtiesData) ? specialtiesData.length : 0,
                    activeNotifications: Array.isArray(notificationsData.notifications?.data) ? 
                        notificationsData.notifications.data.filter(n => n.active).length : 0
                };

                stats.totalGuide = stats.totalTours + stats.totalAccommodations + stats.totalRestaurants + stats.totalSpecialties;
                stats.totalUsers = 0; // Placeholder

                updateUI();
                
            } catch (err) {
                console.error('Error loading dashboard data:', err);
                showError('Không thể tải dữ liệu thống kê. Vui lòng thử lại sau.');
            }
        }

        function updateUI() {
            // Update stats
            document.getElementById('totalRegistrations').innerHTML = `<p class="text-2xl font-bold text-slate-800">${formatNumber(stats.totalRegistrations)}</p>`;
            document.getElementById('totalPOIs').innerHTML = `<p class="text-2xl font-bold text-slate-800">${formatNumber(stats.totalPOIs)}</p>`;
            document.getElementById('totalGuide').innerHTML = `<p class="text-2xl font-bold text-slate-800">${formatNumber(stats.totalGuide)}</p>`;
            
            // Update detailed stats
            // Detailed stats removed from UI
            
            // Update active notifications
            document.getElementById('activeNotifications').textContent = `Thông báo đang hoạt động: ${stats.activeNotifications}`;
            
            // Update admin modules
            const modulesContainer = document.getElementById('adminModules');
            modulesContainer.innerHTML = adminModules.map(module => `
                <a href="${module.link}" class="group block">
                    <div class="${module.bgColor} rounded-2xl p-6 shadow-sm border border-slate-100 transition-all duration-300 hover:shadow-lg hover:scale-105 hover:border-slate-200">
                        <div class="flex items-start justify_between mb-4">
                            <div class="p-3 rounded-xl bg-white shadow-sm">
                                <i class="${module.icon} text-2xl ${module.iconColor}"></i>
                            </div>
                            <div class="text-slate-400 group-hover:text-slate-600 transition-colors">
                                <i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                        
                        <h3 class="text-xl font-semibold text-slate-800 mb-2 group-hover:text-slate-900 transition-colors">
                            ${module.title}
                        </h3>
                        
                        <p class="text-slate-600 text-sm leading-relaxed mb-3">
                            ${module.description}
                        </p>

                        <div class="flex items-center justify-between">
                            <div class="inline-flex items-center text-sm font-medium bg_gradient_to-r ${module.color} bg-clip-text text-transparent">
                                Truy cập ngay
                                <i class="fas fa-chevron-right ml-1 group-hover:translate-x-1 transition-transform"></i>
                            </div>
                            <div class="text-right">
                                <p class="text-xs text-slate-500">Tổng số</p>
                                <p class="text-lg font-bold text-slate-800">${formatNumber(stats[module.countKey] || 0)}</p>
                            </div>
                        </div>
                    </div>
                </a>
            `).join('');
        }

        // Event listeners
        document.getElementById('refreshBtn').addEventListener('click', loadDashboardData);
        document.getElementById('logoutBtn').addEventListener('click', () => {
            if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
                // Clear auth and redirect
                localStorage.removeItem('authToken');
                window.location.href = '/login';
            }
        });

        // Load data on page load
        document.addEventListener('DOMContentLoaded', loadDashboardData);
    </script>
</Layout>